MATCH CREATION
the first phase is the creation of a match, it is done from the first player that connect to the server,
and him decides the player total number of the game
if another player try to connect to the server while the first one is still deciding the total number,
he gets kicked off, because there is no any game existing in that moment

CLIENT                                                   SERVER
send the number of players
"{"cmd" : "set_players", "size" : x}"
----------------------------------------->


              if size is not between 1 and 4
         "{"message" : "the size is not between 1 and 4" , "code" : -1}"
<----------------------------------------------


                else
                "{"message" : "ok, start with the login" , "code" : 0}"
<----------------------------------------------

LOGIN
the second phase is the login, it requires that a match got created, and every player from 1 to size
have to send his nickname, then the game will decide if it is correct or not
every nickname is ok, it requires that is unique and that is not the empty string
note that if a player try to connect and there are more that (size) connection active
(the server will store a list of sockets) the player will kicked off
CLIENT                                                   SERVER
send the nickname
"{"cmd" : "login", "nickname" : str}"
---------------------------------------------------->


            if str.equals("")
         "{"message" : "nickname can't be the empty string" , "code" : -2}"
<------------------------------------------------------


            else if str is contained in the list of nicknames
            "{"message" : "nickname selected is already taken" , "code" : -3}"
<------------------------------------------------------


            else
            "{"message" : "ok, wait for other players to join" , "code" : 1}"
<------------------------------------------------------


            if the login is done from everyone send all the state
            create a game, eventually a single game
            send ALL leader cards, send positions(first player, second, third, fourth), send markets
  "{"message" : "the game start! decide 2 different leader cards to discard" , "code" : 2}"
<------------------------------------------------------------


INITIALISATION
the third phase is the initialisation, in which every player must decide the leader cards that
he want to discard and the resources that he want to get
the leader cards will be numerated from 1 to 4, and the player have to send 2 different integers
in local, based on the position(first, second, third, fourth) will be managed the number of resources
that a player can choose (1째= none, 2째 and 3째 = 1, 4째 = 2)
the resources will be stored in the warehouse automatically, then the player could move them
EVERY TIME ONE OF THESE OPERATION RETURN A CODE < 0, ALL THE DIAGRAM RESTART
CLIENT                                                   SERVER
send the two leader cards to discard
"{"cmd" : "initialise_leaderCards", "firstCard" : x, "secondCard" : y}"
---------------------------------------------------->


          if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


             if the player had already discarded his leader cards
       "{"message" : "you have already discarded the leader cards" , "code" : -4}"
<------------------------------------------------------------


                  if !(1<= x <=4) || !(1<= y <=4)
       "{"message" : "one of the cards index is not between 1 and 4" , "code" : -5}"
<------------------------------------------------------------


            else if ( x == y)
       "{"message" : "the two cards indexes are equals" , "code" : -6}"
<------------------------------------------------------------


            else
            "{"message" : "ok, choose f(position) resource\s" , "code" : 3}"
<-----------------------------------------------------------


send the resources to choose (based on the position)
"{"cmd" : "initialise_resources", "firstResource" : x, "secondResource" : y}"
---------------------------------------------------->


          if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


                    if the player has already done the initialization
       "{"message" : "you have already chosen the initial resources" , "code" : -8}"
<------------------------------------------------------------


                    if resources are not compatible with the position
       "{"message" : "you have chosen too much or not anymore resources" , "code" : -9}"
<------------------------------------------------------------


            else
     "{"message" : "ok, wait for other players to decide and the game will start" , "code" : 4}"
<-----------------------------------------------------------


                 if everyone did the initialization, send all the state
                 send basically everything
   "{"message" : "the game start! is the turn of [actualPlayer], decide your action:" , "code" : 5}"
<-----------------------------------------------------------


now the real game starts

SHIFT RESOURCES
this operation is the most particular, because there is no limit to it, it can be done always
 during the turn without limitations
 EVERY TIME ONE OF THESE OPERATION RETURN A CODE < 0, ALL THE DIAGRAM RESTART
 CLIENT                                                   SERVER
 shift resources
"{"cmd" : "shift_resources", "source" : x, "destination" : y}"
------------------------------------------------------------>


          if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


          if the player didn't do the initialisation
          "{"message" : "error, you have to do initialisation first" , "code" : -18}"
<------------------------------------------------------------


          if(!checkShelfSelected(source) || !checkShelfSelected(source)) that means that a shelf does not exist
          "{"message" : "error, one of the shelf selected does not exist" , "code" : -10}"
<------------------------------------------------------------

          if(!shiftResources(source, destination)) that means that a shift is not possible
          "{"message" : "error, ypu can't do this kind of shift" , "code" : -11}"
<------------------------------------------------------------

            else
          "{"message" : "ok, shift done correctly" , "code" : 6}"
          send ALL the warehouse changed, and the new faith track
<------------------------------------------------------------

            if(shiftResources(source, destination) throws EndGameException) [ONLY SinglePlayer!]
            and you won
          "{"message" : "you won! you gained [getActualPlayer.getVictoryPoints()]" , "code" : 7}"
          send ALL the warehouse changed, and the new faith track
<------------------------------------------------------------


            if(shiftResources(source, destination) throws EndGameException) [ONLY SinglePlayer!]
            and you lost
          "{"message" : "you lost... you gained [getActualPlayer.getVictoryPoints()]" , "code" : 8}"
          send ALL the warehouse changed, and the new faith track
<------------------------------------------------------------


CHOOSE MARBLES
this operation can be done only once during the turn, and it can also end his
dimension can be row or column
EVERY TIME ONE OF THESE OPERATION RETURN A CODE < 0, ALL THE DIAGRAM RESTART
 CLIENT                                                   SERVER
choose marbles
"{"cmd" : "choose_marbles", "dimension" : str, "index" : x}"
------------------------------------------------------------>


          if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


          if the player didn't do the initialisation
          "{"message" : "error, you have to do initialisation first" , "code" : -18}"
<------------------------------------------------------------


                if the player already did a normal action
          "{"message" : "you already did a normal action, do a leader one or end the turn" , "code" : -12}"
<------------------------------------------------------------


                if the dimension is not equals to "row" or "column"
          "{"message" : "the dimension chosen is not correct, it should be row\column" , "code" : -13}"
<------------------------------------------------------------


                if the index is not correct (1,3 from row, 1,4 for column)
          "{"message" : "the index is not correct" , "code" : -14}"
<------------------------------------------------------------
THIS PART IS DONE ONLY IN CASE OF THERE ARE 2 WHITE MARBLE LEADER CARDS


                if actual player own 2 white marbles leader cards
                and selected a column\row with more than 1 white marble
        "{"message" : "you own 2 white marble leader cards , choose for each white marble how to convert it" , "code" : 9}"
<------------------------------------------------------------


FOR LOOP(white marbles){

        "{"message" : "select the leader card whit which convert the 1\[whiteMarblesChosen] white marble chosen" , "code" : 10}"
<------------------------------------------------------------

choose leader card to use
"{"cmd" : "choose_leaderCard", "index" : x}"
------------------------------------------------------------>


          if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


          if the player didn't do the initialisation
          "{"message" : "error, you have to do initialisation first" , "code" : -18}"
<------------------------------------------------------------


                if (!changeWhiteMarble(marbles, index)) the index is not between 1 and 2
          "{"message" : "the leader card selected does not exist" , "code" : -15}"
<------------------------------------------------------------
               }EXIT FROM LOOP
                                                                                    (server calls convert)

          "{"message" : "you gained [resourceType vector], decide how to place them into the warehouse" , "code" : 11}"
<------------------------------------------------------------


FOR LOOP(resourceType vector){

        "{"message" : "select the shelf in which place all the the [resourceType] resources" , "code" : 12}"
<------------------------------------------------------------

select shelf
"{"cmd" : "insert_in_warehouse", "shelf" : x}"
------------------------------------------------------------>


          if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


          if the player didn't do the initialisation
          "{"message" : "error, you have to do initialisation first" , "code" : -18}"
<------------------------------------------------------------


                if (!checkShelfSelected(shelf)) the shelf selected does not exist
          "{"message" : "the shelf selected does not exist" , "code" : -16}"
<------------------------------------------------------------
                        } EXIT FROM LOOP


            else
          send ALL the warehouse changed, and the new faith track
<------------------------------------------------------------


            if(insertInWarehouse(..) throws EndGameException) [ONLY SinglePlayer!]
            and you won
          "{"message" : "you won! you gained [getActualPlayer.getVictoryPoints()]" , "code" : 7}"
<------------------------------------------------------------


            else if(insertInWarehouse(..) throws EndGameException) [ONLY SinglePlayer!]
            and you lost
          "{"message" : "you lost... you gained [getActualPlayer.getVictoryPoints()]" , "code" : 8}"
<------------------------------------------------------------


BUY CARD
this operation can be done only once during the turn, with thismethod the player select and buy
one development card present in the market
EVERY TIME ONE OF THESE OPERATION RETURN A CODE < 0, ALL THE DIAGRAM RESTART
 CLIENT                                                   SERVER

choose card
"{"cmd" : "choose_card", "color" : str, "level" : x}"
------------------------------------------------------------>


 if the player has already done one normal action(select marble from market, activate production and buy card)
          "{"message" : "error, you have already done ona normal action" , "code" : -17}"
<------------------------------------------------------------


         if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


          if the player didn't do the initialisation
          "{"message" : "error, you have to do initialisation first" , "code" : -18}"
<------------------------------------------------------------


	  if the player selects a level<1 or >3
          "{"message" : "error, you have to select a correct level" , "code" : -21}"
<------------------------------------------------------------


          if the player write a color that doesn't exist
          "{"message" : "error, you have to select a correct color" , "code" : -22}"
<------------------------------------------------------------


          if there isn't avaliable card in the selected position
          "{"message" : "error, you have to select another avaliable card" , "code" : -23}"
<------------------------------------------------------------


          if the player hasn't anough resources to buy the selected card
          "{"message" : "error, you don't own enough resources; try to change card" , "code" : -24}"
<------------------------------------------------------------


select position
"{"cmd" : "select position", "dashboardPosition" : x}"
------------------------------------------------------------>


          if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


          if the player didn't do the initialisation
          "{"message" : "error, you have to do initialisation first" , "code" : -18}"
<------------------------------------------------------------


	   if the player selects a position <1 or >3
          "{"message" : "error, you have to select a correct position in dashboard" , "code" : -25}"
<------------------------------------------------------------


	   if the player selects a correct position but in that position there is a card that has
            a level bigger than the card selected by the player
          "{"message" : "error, you have to select another position in dashboard" , "code" : -26}"
<------------------------------------------------------------


	   if the player selects a correct position but that position is empty or there is a card that has
            a level too smaller than the card selected by the player (for example level 3 card placed on level 1 card)
          "{"message" : "error, you have to select another position in dashboard" , "code" : -27}"
<------------------------------------------------------------



select resouces from warehouse
"{"cmd" : "select resouces from warehouse" , "resources from warehouse" : x//DA CHIEDERE}"(BISOGNA CAPIRE COME MANDARE UNA COLLECTION RESOURCES)
------------------------------------------------------------>


          if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


          if the player didn't do the initialisation
          "{"message" : "error, you have to do initialisation first" , "code" : -18}"
<------------------------------------------------------------


	  if the check warehouse resuorces returns false
          "{"message" : "error,you have seleceted an incorrect number of resources" , "code" : -40}"
<------------------------------------------------------------



CASE PRODUCTION
production
"{"cmd" : "production"}"
------------------------------------------------------------>


 if the player has already done one normal action(select marble from market, activate production and buy card)
          "{"message" : "error, you have already done ona normal action" , "code" : -345}"
<------------------------------------------------------------


          if the player didn't do the login
          "{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


          if the player didn't do the initialisation
          "{"message" : "error, you have to do initialisation first" , "code" : -18}"
<------------------------------------------------------------


          else write the production type that you want activate
          "{"message" : "write the production type that you want activate" , "code" : 20}"
<------------------------------------------------------------



	CASE BASIC PRODUCTION
	"{"cmd" : "basic_production" , "firstResource" : x , "secondResource" : y , "toPayFirstFromWarehouse" : boolean , "toPaySecondFromWarehouse" : boolean , "output" : resource}"
	------------------------------------------------------------>


        	  if the player didn't do the login
          	"{"message" : "error, you have to do login first" , "code" : -17}"
	<------------------------------------------------------------


          	if the player didn't do the initialisation
          	"{"message" : "error, you have to do initialisation first" , "code" : -18}"
	<------------------------------------------------------------


	 	 if the check activate basic production returns false
         	 "{"message" : "error,you don't have enough resources" , "code" : -41}"
	<------------------------------------------------------------


	 if the player has already activate the basic production
 	         "{"message" : "error, you have already activated this type of production" , "code" : -346}"
	<------------------------------------------------------------



	CASE NORMAL PRODUCTION
	"{"cmd" : "normal_production" , "position" : x , "ToPayFromWarehouse" : collectionResources}"
	------------------------------------------------------------>


        	  if the player didn't do the login
          	"{"message" : "error, you have to do login first" , "code" : -17}"
	<------------------------------------------------------------


          	if the player didn't do the initialisation
          	"{"message" : "error, you have to do initialisation first" , "code" : -18}"
	<------------------------------------------------------------


	 	 if the check production returns false
         	 "{"message" : "error,you don't have enough resources or the production selected doesn't exist" , "code" : -41,3}"
	<------------------------------------------------------------


	 if the player has already activate the normal production
 	         "{"message" : "error, you have already activated this type of production" , "code" : -346}"
	<------------------------------------------------------------


	  	if the check activate normal production returns false
          	"{"message" : "error,you have seleceted an incorrect number of resources" , "code" : -44}"
	<------------------------------------------------------------




	CASE LEADER PRODUCTION
	"{"cmd" : "leader_production" , "position" : x , "fromWarehouse" boolean}"
	------------------------------------------------------------>


        	  if the player didn't do the login
          	"{"message" : "error, you have to do login first" , "code" : -17}"
	<------------------------------------------------------------


          	if the player didn't do the initialisation
          	"{"message" : "error, you have to do initialisation first" , "code" : -18}"
	<------------------------------------------------------------


	 	 if the check production returns false
         	 "{"message" : "error,you don't have enough resources or the production selected doesn't exist" , "code" : -41,3}"
	<------------------------------------------------------------


	 if the player has already activate leader production
 	         "{"message" : "error, you have already activated this type of production" , "code" : -346}"
	<------------------------------------------------------------


	  	if the check activate leader production returns false
          	"{"message" : "error,you have selected an incorrect number of resources" , "code" : -44}"
	<------------------------------------------------------------



	CASE END PRODUCTION
	"{"cmd" : "end_production"}"
	------------------------------------------------------------>


        	  if the player didn't do the login
          	"{"message" : "error, you have to do login first" , "code" : -17}"
	<------------------------------------------------------------


          	if the player didn't do the initialisation
          	"{"message" : "error, you have to do initialisation first" , "code" : -18}"
	<------------------------------------------------------------

ACTIVATE LEADER CARD

"{"cmd" : "leader_action"}"
------------------------------------------------------------>


        	  if the player didn't do the login
          	"{"message" : "error, you have to do login first" , "code" : -17}"
<------------------------------------------------------------


          	if the player didn't do the initialisation
          	"{"message" : "error, you have to do initialisation first" , "code" : -18}"
<------------------------------------------------------------

          if the player already did a leader action
          "{"message" : "error, you have already done a leader action" , "code" : -50}"
<------------------------------------------------------------
            CASE ACTIVATE
            "{"cmd" : "leader_action_activate", "toActivate" : int}"
            ------------------------------------------------------------>


      	    if the player didn't do the login
          	"{"message" : "error, you have to do login first" , "code" : -17}"
            <------------------------------------------------------------


          	if the player didn't do the initialisation
          	"{"message" : "error, you have to do initialisation first" , "code" : -18}"
        	<------------------------------------------------------------


        	if (!checkLeaderCard(toActivate)) the leader card selected does not exist
          	"{"message" : "error, the leader card selected does not exist" , "code" : -51}"
        	<------------------------------------------------------------

            if(!activateLeaderCard(toActivate)) the leader card is already activated or
            the player doesn't meet the requirements to activate it
            "{"message" : "the leader card is already activated or you don't meet the requirements to activate it" , "code" : -52}"
            <------------------------------------------------------------

            CASE DISCARD
            "{"cmd" : "leader_action_discard", "toDiscard" : int}"
            ------------------------------------------------------------>


      	    if the player didn't do the login
          	"{"message" : "error, you have to do login first" , "code" : -17}"
            <------------------------------------------------------------


          	if the player didn't do the initialisation
          	"{"message" : "error, you have to do initialisation first" , "code" : -18}"
        	<------------------------------------------------------------


        	if (!checkLeaderCard(toActivate)) the leader card selected does not exist
          	"{"message" : "error, the leader card selected does not exist" , "code" : -51}"
        	<------------------------------------------------------------

        	if(!discardLeaderCard(toDiscard)) the leader card is already activated
            "{"message" : "the leader card is already activated " , "code" : -53}"
            <------------------------------------------------------------

